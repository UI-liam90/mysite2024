---
import BlockWrapper from "~helpers/BlockWrapper.astro";
import ContactBlock from "~components/ContactBlock/ContactBlock.astro";
import FormBlock from "~components/FormBlock/FormBlock.astro";
import ImageBlock from "~components/ImageBlock/ImageBlock.astro";
import TextBlock from "~components/TextBlock/TextBlock.astro";
const { columnData } = Astro.props;
const blocks = columnData?.blocks;
---

<div class="multicolumn-block__column">
    {
        blocks &&
            blocks.map((block) => {
                switch (block.fieldGroupName) {
                    case `PageBuilderBlocksColumnOneBlocksContactBlockLayout`:
                        return (
                            <BlockWrapper blockName="contact-block-wrapper" blockData={block} blockContext="multi">
                                <ContactBlock blockData={block} />
                            </BlockWrapper>
                        );
                    case `PageBuilderBlocksColumnOneBlocksFormBlockLayout`:
                        return (
                            <BlockWrapper blockName="form-block-wrapper" blockData={block} blockContext="multi">
                                <FormBlock blockData={block} />
                            </BlockWrapper>
                        );
                    case `PageBuilderBlocksColumnOneBlocksImageBlockLayout`:
                        return (
                            <BlockWrapper blockName="image-block-wrapper" blockData={block} blockContext="multi">
                                <ImageBlock blockData={block} />
                            </BlockWrapper>
                        );
                    case `PageBuilderBlocksColumnOneBlocksTextBlockLayout`:
                        return (
                            <BlockWrapper blockName="text-block-wrapper" blockData={block} blockContext="multi">
                                <TextBlock blockData={block} />
                            </BlockWrapper>
                        );
                    default:
                        return null;
                }
            })
    }
</div>
